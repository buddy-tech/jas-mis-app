/*
body {
  padding: 50px;
  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;
}

a {
  color: #00B7FF;
}
*/
md-toolbar.md-default-theme {
  background-color: white;
  color: rgba(116, 117, 41, 1);
}

md-content.md-default-theme {
  background-color: transparent;
}

md-option {
  background-color: white;
}

.belowTheToolbar {
  background-color: whitesmoke;
  background: url("../images/bg-img.jpg") no-repeat;
  background-size: 100% 220px;
}

.addNew{
  padding-top: 180px;
}

.md-button.md-default-theme.md-fab{
  background-color: black;
}
.md-button.md-default-theme.md-fab.edge{
  background-color: white;

}
.md-button.md-default-theme.md-fab md-icon.edge {
  color: black;
}
div.md-actions.edge {
  margin-right: -50px;
}

.globalSearchArea {
  padding-top: 80px;
}

.search {
  width: 100%;
  height: 50px;
  background: url("/images/ic_search_24px.svg") no-repeat;
  background-color: white;
  padding-left: 50px;
  background-position: 10px 10px;
}

html {
  background-color: whitesmoke;
}
body{
  background-color: whitesmoke;
}

.contentArea {
  padding-top: 30px;
}

.farmerPretty {
  padding-top: 50px;
}

.farmerPretty2 {
  padding-top: 100px;
  padding-bottom: 50px;
}

md-card-content.pretty {
  background-color: #d8e4f1;
}

.farmerSummary h2 {
  font-weight: bolder;
}
.farmerSummary h3 {
  font-weight: bold;
}
.farmerSummary h4 {
  font-weight: lighter;
  color: gray;
}

.farmerSummary {
  margin: 0px;
  text-transform: lowercase;
}

.farmerSummary:first-letter {
  text-transform: uppercase;
}

.farmerInfo {
  border-bottom-color: #B8BDBD;
  border-width: thin;
  border-bottom-style: solid;
}

.farmer_info {
  border-bottom-color: #B8BDBD;
  border-width: thin;
  border-bottom-style: solid;
  padding-bottom: 30px;
  padding-top: 30px;
}

.lastInfo{
  padding-top: 30px;
}

.label {
  color: grey;
}

.md-subheader.md-default-theme.pretty {
  background-color: #d8e4f1;
}

.completeTransStat {
  background-image: url('/images/circle.png');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  height: 80px;
  color: green;
}

.pendingTransStat{
  background-image: url('/images/circle2.png');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  height: 80px;
  color:orange;
}

.disputeStat {
  background-image: url('/images/circle3.png');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  height: 80px;
  color: red;
}

.statLabels{
  padding-bottom: 20px;
  border-bottom: thin;
  border-bottom-style: solid;
  border-bottom-color: lightgray;
}

/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .repeated-item
  class
*/
.repeated-item.ng-enter, .repeated-item.ng-move {
  -webkit-transition:0.5s linear all;
  -moz-transition:0.5s linear all;
  -o-transition:0.5s linear all;
  transition:0.5s linear all;
  opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated-item.ng-enter.ng-enter-active,
.repeated-item.ng-move.ng-move-active {
  opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated-item class
*/
.repeated-item.ng-leave {
  -webkit-animation:0.5s my_animation;
  -moz-animation:0.5s my_animation;
  -o-animation:0.5s my_animation;
  animation:0.5s my_animation;
}

@keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-moz-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-o-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}